From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spliterash <me@spliterash.ru>
Date: Sun, 26 Mar 2023 18:12:59 +0300
Subject: [PATCH] Disable recipe book


diff --git a/src/main/java/net/minecraft/stats/ServerRecipeBook.java b/src/main/java/net/minecraft/stats/ServerRecipeBook.java
index d13ed3069e944d138442ea440ac3eaf8d44c18d3..eaf23b5bf6bcdf7822c6decbd1734e31c91ffb14 100644
--- a/src/main/java/net/minecraft/stats/ServerRecipeBook.java
+++ b/src/main/java/net/minecraft/stats/ServerRecipeBook.java
@@ -2,12 +2,6 @@ package net.minecraft.stats;
 
 import com.google.common.collect.Lists;
 import com.mojang.logging.LogUtils;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Optional;
-import java.util.function.Consumer;
 import net.minecraft.ResourceLocationException;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.nbt.CompoundTag;
@@ -18,9 +12,12 @@ import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.item.crafting.RecipeManager;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.slf4j.Logger;
+import ru.minetopia.server.MinetopiaConfig;
 
-import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+import java.util.*;
+import java.util.function.Consumer;
 
 public class ServerRecipeBook extends RecipeBook {
 
@@ -30,6 +27,8 @@ public class ServerRecipeBook extends RecipeBook {
     public ServerRecipeBook() {}
 
     public int addRecipes(Collection<Recipe<?>> recipes, ServerPlayer player) {
+        if (!MinetopiaConfig.recipeBook)
+            return 0;
         List<ResourceLocation> list = Lists.newArrayList();
         int i = 0;
         Iterator iterator = recipes.iterator();
@@ -52,6 +51,8 @@ public class ServerRecipeBook extends RecipeBook {
     }
 
     public int removeRecipes(Collection<Recipe<?>> recipes, ServerPlayer player) {
+        if (!MinetopiaConfig.recipeBook)
+            return 0;
         List<ResourceLocation> list = Lists.newArrayList();
         int i = 0;
         Iterator iterator = recipes.iterator();
@@ -73,11 +74,15 @@ public class ServerRecipeBook extends RecipeBook {
 
     private void sendRecipes(ClientboundRecipePacket.State action, ServerPlayer player, List<ResourceLocation> recipeIds) {
         if (player.connection == null) return; // SPIGOT-4478 during PlayerLoginEvent
+        if (!MinetopiaConfig.recipeBook)
+            return;
         player.connection.send(new ClientboundRecipePacket(action, recipeIds, Collections.emptyList(), this.getBookSettings()));
     }
 
     public CompoundTag toNbt() {
         CompoundTag nbttagcompound = new CompoundTag();
+        if (!MinetopiaConfig.recipeBook)
+            return nbttagcompound;
 
         this.getBookSettings().write(nbttagcompound);
         ListTag nbttaglist = new ListTag();
@@ -104,6 +109,8 @@ public class ServerRecipeBook extends RecipeBook {
     }
 
     public void fromNbt(CompoundTag nbt, RecipeManager recipeManager) {
+        if(!MinetopiaConfig.recipeBook)
+            return;
         this.setBookSettings(RecipeBookSettings.read(nbt));
         ListTag nbttaglist = nbt.getList("recipes", 8);
 
@@ -134,6 +141,7 @@ public class ServerRecipeBook extends RecipeBook {
     }
 
     public void sendInitialRecipeBook(ServerPlayer player) {
-        player.connection.send(new ClientboundRecipePacket(ClientboundRecipePacket.State.INIT, this.known, this.highlight, this.getBookSettings()));
+        if (MinetopiaConfig.recipeBook)
+            player.connection.send(new ClientboundRecipePacket(ClientboundRecipePacket.State.INIT, this.known, this.highlight, this.getBookSettings()));
     }
 }
diff --git a/src/main/java/ru/minetopia/server/MinetopiaConfig.java b/src/main/java/ru/minetopia/server/MinetopiaConfig.java
index e626d568eaa347cbfae14b91cb3981f7b17c8450..12c2c002b399200bab90345e67a99c10952337cd 100644
--- a/src/main/java/ru/minetopia/server/MinetopiaConfig.java
+++ b/src/main/java/ru/minetopia/server/MinetopiaConfig.java
@@ -136,4 +136,10 @@ public class MinetopiaConfig {
             "Full disable any world save on disk"
         );
     }
+
+    public static boolean recipeBook;
+
+    private static void recipeBookEnabled() {
+        recipeBook = getBoolean("recipe-book", true, "Recipe book enabled");
+    }
 }
